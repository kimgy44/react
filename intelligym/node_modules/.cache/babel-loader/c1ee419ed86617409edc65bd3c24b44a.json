{"ast":null,"code":"var _jsxFileName = \"C:\\\\git_20220415\\\\dev-web\\\\src\\\\main\\\\intelligym\\\\src\\\\app.jsx\";\nimport React from \"react\";\nimport \"./app.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const name = \"이순신\";\n  return (\n    /*#__PURE__*/\n\n    /* 리액트에서는 태그를 선언하여 사용함 - 멀티라인을 작성하려면 최외곽에 반드시 Fragment 태그 \n      jsp => java+html\n      리액트 UI안에는 html태그와 javascript혼용하여 쓸 수 있다.\n    */\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello! \", \"name\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello! \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this), //자바스크립트 코드를 작성할 수 있다.\n      name && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hi!!! \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), [\"🥝\", \"🍇\", \"🍅\"].map((item, index) => (console.log(index), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 48\n      }, this)))]\n    }, void 0, true)\n  );\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","App","name","map","item","index","console","log"],"sources":["C:/git_20220415/dev-web/src/main/intelligym/src/app.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./app.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const name = \"이순신\";\n  return (\n    /* 리액트에서는 태그를 선언하여 사용함 - 멀티라인을 작성하려면 최외곽에 반드시 Fragment 태그 \n      jsp => java+html\n      리액트 UI안에는 html태그와 javascript혼용하여 쓸 수 있다.\n    */\n    <>\n      <h1>Hello! {\"name\"}</h1>\n      <h1>Hello! {name}</h1>\n      {\n        //자바스크립트 코드를 작성할 수 있다.\n        name && <h1>Hi!!! {name}</h1>\n      }\n      {[\"🥝\", \"🍇\", \"🍅\"].map(\n        (item, index) => (console.log(index), (<h1>{item}</h1>))\n      )}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAO,sCAAP;;;;AAEA,SAASC,GAAT,GAAe;EACb,MAAMC,IAAI,GAAG,KAAb;EACA;IAAA;;IACE;AACJ;AACA;AACA;IACI;MAAA,wBACE;QAAA,sBAAY,MAAZ;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,sBAAYA,IAAZ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,EAII;MACAA,IAAI,iBAAI;QAAA,qBAAWA,IAAX;MAAA;QAAA;QAAA;QAAA;MAAA,QALZ,EAOG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmBC,GAAnB,CACC,CAACC,IAAD,EAAOC,KAAP,MAAkBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,gBAAqB;QAAA,UAAKD;MAAL;QAAA;QAAA;QAAA;MAAA,QAAvC,CADD,CAPH;IAAA;EALF;AAiBD;;KAnBQH,G;AAqBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}