{"ast":null,"code":"var _jsxFileName = \"C:\\\\git_20220415\\\\dev-web\\\\src\\\\main\\\\intelligym\\\\src\\\\bootStrapApp.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./app.css\";\nimport React from \"react\";\nimport { Container, Navbar, Nav, Button } from \"react-bootstrap\";\nimport { Link, Route, Routes, useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport TentPage from \"./components/pages/TentPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction BootStrapApp(props) {\n  _s();\n\n  //변수 선언 위치, 함수 선언 위치\n  let [tents, setTents] = useState([{\n    id: 1,\n    title: \"텐트1\",\n    content: \"2~3dlsdydxpsxm\"\n  }]);\n  let navigate = useNavigate(); //함수형 프로그래밍지향 - 클래스가 아닌 훅으로 처리함\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"dark\",\n      variant: \"dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"#home\",\n          children: \"JavaCamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"me-auto\",\n          children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n            onClick: () => {\n              navigate(\"/\");\n            },\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            onClick: () => {\n              navigate(\"/tents\");\n            },\n            children: \"\\uD150\\uD2B8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            href: \"#pricing\",\n            children: \"\\uB9E4\\uD2B8/\\uCE68\\uB0AD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-bg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uD648\\uD398\\uC774\\uC9C0 \\uC785\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/tents/:id/:name\",\n        element: /*#__PURE__*/_jsxDEV(TentPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(BootStrapApp, \"QapxrpMm/FSGcNwq9U5cQsMsyQc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = BootStrapApp;\nexport default BootStrapApp;\n/*\r\n  리액트에서는 싱글페이지 어플리케이션으로 구현할것\r\n  따라서 a태그를 사용하여 페이지URL이 변경되지 않도록 하면서 \r\n  화면 전환이 이루어지도록 처리함\r\n\r\n  이전페이지 이동\r\n  history.go();  history.go(-1);이전페이지 이동 history.go(1);다음페이지로 이동\r\n  리액트에서는 useNavigate훅을 이용해서 처리함\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"BootStrapApp\");","map":{"version":3,"names":["React","Container","Navbar","Nav","Button","Link","Route","Routes","useNavigate","styled","TentPage","BootStrapApp","props","tents","setTents","useState","id","title","content","navigate"],"sources":["C:/git_20220415/dev-web/src/main/intelligym/src/bootStrapApp.jsx"],"sourcesContent":["import \"./app.css\";\r\nimport React from \"react\";\r\nimport { Container, Navbar, Nav, Button } from \"react-bootstrap\";\r\nimport { Link, Route, Routes, useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport TentPage from \"./components/pages/TentPage\";\r\nfunction BootStrapApp(props) {\r\n  //변수 선언 위치, 함수 선언 위치\r\n  let [tents, setTents] = useState([{id:1,title:\"텐트1\",content:\"2~3dlsdydxpsxm\"}]);\r\n  let navigate = useNavigate(); //함수형 프로그래밍지향 - 클래스가 아닌 훅으로 처리함\r\n  return (\r\n    <>\r\n      {/* 헤더 영역 시작 */}\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\">JavaCamp</Navbar.Brand>\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link\r\n              onClick={() => {\r\n                navigate(\"/\");\r\n              }}\r\n            >\r\n              Home\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              onClick={() => {\r\n                navigate(\"/tents\");\r\n              }}\r\n            >\r\n              텐트\r\n            </Nav.Link>\r\n            <Nav.Link href=\"#pricing\">매트/침낭</Nav.Link>\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n      {/* 헤더 영역  끝  */}\r\n      <div className=\"main-bg\"></div>\r\n      <Routes>\r\n        <Route path=\"/\" element={<div>홈페이지 입니다.</div>} />\r\n        <Route path=\"/tents/:id/:name\" element={<TentPage />} />\r\n      </Routes>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BootStrapApp;\r\n\r\n/*\r\n  리액트에서는 싱글페이지 어플리케이션으로 구현할것\r\n  따라서 a태그를 사용하여 페이지URL이 변경되지 않도록 하면서 \r\n  화면 전환이 이루어지도록 처리함\r\n\r\n  이전페이지 이동\r\n  history.go();  history.go(-1);이전페이지 이동 history.go(1);다음페이지로 이동\r\n  리액트에서는 useNavigate훅을 이용해서 처리함\r\n*/\r\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,MAAjC,QAA+C,iBAA/C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,WAA9B,QAAiD,kBAAjD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,6BAArB;;;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EAAA;;EAC3B;EACA,IAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,CAAC;IAACC,EAAE,EAAC,CAAJ;IAAMC,KAAK,EAAC,KAAZ;IAAkBC,OAAO,EAAC;EAA1B,CAAD,CAAD,CAAhC;EACA,IAAIC,QAAQ,GAAGX,WAAW,EAA1B,CAH2B,CAGG;;EAC9B,oBACE;IAAA,wBAEE,QAAC,MAAD;MAAQ,EAAE,EAAC,MAAX;MAAkB,OAAO,EAAC,MAA1B;MAAA,uBACE,QAAC,SAAD;QAAA,wBACE,QAAC,MAAD,CAAQ,KAAR;UAAc,IAAI,EAAC,OAAnB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,GAAD;UAAK,SAAS,EAAC,SAAf;UAAA,wBACE,QAAC,GAAD,CAAK,IAAL;YACE,OAAO,EAAE,MAAM;cACbW,QAAQ,CAAC,GAAD,CAAR;YACD,CAHH;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAQE,QAAC,GAAD,CAAK,IAAL;YACE,OAAO,EAAE,MAAM;cACbA,QAAQ,CAAC,QAAD,CAAR;YACD,CAHH;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QARF,eAeE,QAAC,GAAD,CAAK,IAAL;YAAU,IAAI,EAAC,UAAf;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAfF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF,eAyBE;MAAK,SAAS,EAAC;IAAf;MAAA;MAAA;MAAA;IAAA,QAzBF,eA0BE,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QAAO,IAAI,EAAC,GAAZ;QAAgB,OAAO,eAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAzB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QAAO,IAAI,EAAC,kBAAZ;QAA+B,OAAO,eAAE,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA;MAAxC;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QA1BF;EAAA,gBADF;AAiCD;;GArCQR,Y;UAGQH,W;;;KAHRG,Y;AAuCT,eAAeA,YAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}